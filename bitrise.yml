format_version: 1.1.0
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  - RELEASE_VERSION: 1.0.5

workflows:
  ci:
    before_run:
    - audit-this-step
    after_run:
    - test
    - test-no-root-buildfile
    - test-gradle-kts

  test:
    description: "Test with all inputs defined"
    envs:
    - SAMPLE_APP_URL: https://github.com/bitrise-samples/sample-apps-android-sdk22.git
    - GRADLE_BUILD_FILE_PATH: ./build.gradle
    - GRADLEW_PATH: ./gradlew
    - BRANCH: master
    after_run:
    - _common

  test-no-root-buildfile:
    description: "Test without GRADLE_BUILD_FILE_PATH"
    envs:
    - SAMPLE_APP_URL: https://github.com/bitrise-samples/android-empty-library.git
    - GRADLE_BUILD_FILE_PATH: ""
    - GRADLEW_PATH: ./gradlew
    - BRANCH: master
    after_run:
    - _common

  test-gradle-kts:
    description: "Test Gradle Kotlin DSL support"
    envs:
    - SAMPLE_APP_URL: https://github.com/bitrise-samples/android-gradle-kotlin-dsl.git
    - GRADLE_BUILD_FILE_PATH: "./build.gradle.kts"
    - GRADLEW_PATH: ./gradlew
    - BRANCH: master
    after_run:
    - _common

  # ----------------------------------------------------------------
  # --- workflow to Step Test
  _common:
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            rm -rf ./_tmp
    - change-workdir:
        title: Switch working dir to test / _tmp dir
        run_if: true
        inputs:
        - path: ./_tmp
        - is_create_path: true
    - script:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            if [[ -z "${SAMPLE_APP_URL}" ]]; then
              echo "error: there is no SAMPLE_APP_URL env var specified"
              exit 1
            elif [[ -z "${COMMIT}" && -z "${BRANCH}" ]]; then
              echo "error: can't checkout: there is no BRANCH or COMMIT env var specified"
              exit 1
            fi
            git init
            git remote add origin "${SAMPLE_APP_URL}"
            git fetch || exit 1
            [[ -n "${COMMIT}" ]] && git checkout "${COMMIT}" || git checkout "${BRANCH}"
    - path::./:
    - script:
        title: Output test
        is_always_run: true
        inputs:
        - content: |-
            echo "BITRISE_GRADLE_TEST_RESULT: $BITRISE_GRADLE_TEST_RESULT"

  # ----------------------------------------------------------------
  # --- Utility workflows
  godeps-update:
    title: Godeps update
    description: |
      Used for updating bitrise dependencies with godep
    steps:
    - script:
        title: Dependency update
        inputs:
        - content: |
            #!/bin/bash
            set -ex
            go get -u -v github.com/tools/godep

            rm -rf ./Godeps
            rm -rf ./vendor

            go get -t -d ./...
            godep save ./...

  # ----------------------------------------------------------------
  # --- workflow to create Release version
  create-release:
    steps:
    - script:
        title:
        inputs:
        - content: |
            #!/bin/bash
            set -ex
            go get -u github.com/bitrise-tools/releaseman
            export CI=true
            releaseman create --version "$RELEASE_VERSION"

  # ----------------------------------------------------------------
  # --- workflows to Share this step into a Step Library
  audit-this-step:
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            stepman audit --step-yml ./step.yml

  share-this-step:
    envs:
      # if you want to share this step into a StepLib
      - MY_STEPLIB_REPO_FORK_GIT_URL: $MY_STEPLIB_REPO_FORK_GIT_URL
      - STEP_ID_IN_STEPLIB: gradle-unit-test
      - STEP_GIT_VERION_TAG_TO_SHARE: $RELEASE_VERSION
      - STEP_GIT_CLONE_URL: https://github.com/bitrise-io/steps-gradle-unit-test.git
    description: |-
      If this is the first time you try to share a Step you should
      first call: $ bitrise share

      This will print you a guide, and information about how Step sharing
      works. Please read it at least once!

      As noted in the Step sharing guide you'll have to fork the
      StepLib you want to share this step into. Once you're done with forking
      the repository you should set your own fork's git clone URL
      in the `.bitrise.secrets.yml` file, or here in the `envs` section,
      as the value of the `MY_STEPLIB_REPO_FORK_GIT_URL` environment.

      You're now ready to share this Step, just make sure that
      the `STEP_ID_IN_STEPLIB` and `STEP_GIT_VERION_TAG_TO_SHARE`
      environments are set to the desired values!

      To share this Step into a StepLib you can just run: $ bitrise run share-this-step

      Once it finishes the only thing left is to actually create a Pull Request,
      the way described in the guide printed at the end of the process.
    before_run:
    - audit-this-step
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            bitrise share start -c ${MY_STEPLIB_REPO_FORK_GIT_URL}
            bitrise share create --stepid ${STEP_ID_IN_STEPLIB} --tag ${STEP_GIT_VERION_TAG_TO_SHARE} --git ${STEP_GIT_CLONE_URL}
            bitrise share finish
